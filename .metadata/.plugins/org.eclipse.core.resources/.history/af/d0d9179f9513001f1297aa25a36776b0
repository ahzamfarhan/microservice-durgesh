package com.lcwd.rating.ratings.controllers;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lcwd.rating.ratings.entities.Rating;
import com.lcwd.rating.ratings.entities.service.RatingService;

import lombok.AllArgsConstructor;


@RestController
@RequestMapping("/ratings")
@AllArgsConstructor
public class RatingController {
	
	private RatingService ratingService;
	
	@PostMapping
	public ResponseEntity<Rating> create(@RequestBody Rating rating) {
		return ResponseEntity
				.status(HttpStatus.CREATED)
				.body(ratingService.create(rating));
	}
	
	@GetMapping
	public ResponseEntity<List<Rating>> getAll() {
		return ResponseEntity.ok(ratingService.getAll());
	}
	
	@PreAuthorize("hasAuthority('SCOPE_internal2') || hasAuthority('Admin')")
	@GetMapping("/{id}")
	public ResponseEntity<Rating> getById(@PathVariable("id") String id) {
		return ResponseEntity.ok(ratingService.getById(id));
	}
	
	@GetMapping("/users/{userId}")
	public ResponseEntity<List<Rating>> getRatingByUserId(@PathVariable("userId") String userId) {
		return ResponseEntity.ok(ratingService.getRatingByUserId(userId));
	}
}